Conveyor(
		input signal bottleAtPos1, bottleLeftPos5, bottleAtPos5;
		output signal motConveyorOn;
		)
->{
/* TODO: Write control-logic */
	
	loop {
		pause;
		await(!bottleLeftPos5);
		abort(bottleAtPos1){
			sustain motConveyorOn;
		}
		await(bottleAtPos5);
		abort(bottleLeftPos5){
			sustain motConveyorOn;
		}
	}
	

}

RotaryTable(
		input signal tableAlignedWithSensor, bottleAtPos5, capsonBottleAtPos1, bottleAtPos1;
		output signal rotaryTableTrigger;
		)
->{
/* TODO: Write control-logic */
	//My change is logic good?
	loop{
		pause;
		await(bottleAtPos1);
			present(!capsonBottleAtPos1){
				abort(bottleAtPos5 || tableAlignedWithSensor){
					sustain rotaryTableTrigger;
				}
//				abort(tableAlignedWithSensor){
//					sustain rotaryTableTrigger;
//				}
			}
	}

}

Capper(
		input signal bottleAtPos4, gripperZAxisLowered, gripperZAxisLifted, gripperTurnHomePos, gripperTurnFinalPos;
		output signal cylPos5ZAxisExtend, gripperTurnRetract, gripperTurnExtend, capGripperPos5Extend, cylClampBottleExtend;
		)
->{
/* TODO: Write control-logic */
	
	loop{
		pause;
		await(bottleAtPos4);
		abort(gripperZAxisLowered){//clamp and lower gripper until gripper is fully lowered
			{
				sustain cylClampBottleExtend;//clamp bottle
			}
			||
			{
				sustain cylPos5ZAxisExtend;//lower gripper
			}
		}
		
		abort(gripperTurnFinalPos){//steps 3 & 4
			{
				sustain cylClampBottleExtend;//clamp bottle
			}
			||
			{
				sustain cylPos5ZAxisExtend;//lower gripper
			}
			||
			{
				sustain capGripperPos5Extend;//grip the cap with gripper
			}
			||
			{
				sustain gripperTurnExtend;//twist the gripper
			}
		}
		
		abort(gripperTurnHomePos){//steps 5 & 6
			{
				sustain cylClampBottleExtend;//clamp bottle
			}
			||
			{
				sustain cylPos5ZAxisExtend;//lower gripper
			}
			||
			{
				sustain gripperTurnRetract;//twist the gripper
			}
		}
		
		abort(gripperZAxisLifted){
			sustain cylClampBottleExtend;//clamp bottle
		}
	}

}

Filler(
		input signal bottleAtPos2, dosUnitEvac, dosUnitFilled;
		output signal valveInjectorOnOff, valveInletOnOff, dosUnitValveRetract, dosUnitValveExtend;
		)
->{
/* TODO: Write control-logic */
	loop{
		pause;
		await(bottleAtPos2);
		abort(dosUnitFilled){
			{sustain valveInjectorOnOff;}
			||
			{
				present(dosUnitEvac){
					sustain dosUnitValveRetract;
				}
			}
			
		}
		
		abort(dosUnitEvac){
			{sustain valveInletOnOff;}
			||
			{
				sustain dosUnitValveExtend;
			}
		}
	}
}